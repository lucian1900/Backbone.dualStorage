// Generated by CoffeeScript 1.6.3
describe('localSync', function() {
  var storageClass, storageName, _ref, _results;
  _ref = Backbone.storageAdapters;
  _results = [];
  for (storageName in _ref) {
    storageClass = _ref[storageName];
    _results.push((function(storageName, storageClass) {
      var _describe;
      _describe = storageClass === StickyStorage ? describe.skip : describe;
      return _describe("with " + storageName, function() {
        var model, storage, store, _ref1;
        _ref1 = {}, storage = _ref1.storage, store = _ref1.store, model = _ref1.model;
        beforeEach(function(done) {
          storage = new storageClass;
          store = new Backbone.Store('Store', storage);
          model = new Backbone.Model({
            id: 1,
            abc: 123
          });
          return storage.initialize().done(function() {
            return store.initialize().done(function() {
              return done();
            });
          });
        });
        afterEach(function(done) {
          return store.clear().done(function() {
            return storage.clear().done(function() {
              return done();
            });
          });
        });
        return it('works correctly when merge == false', function(done) {});
      });
    })(storageName, storageClass));
  }
  return _results;
});
